<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright 2023 Adobe
 * All Rights Reserved.
 */
-->
<!-- Test XML Example -->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminChecksIfOnlyOneQuantityConfigurationIsDisplayedForBundleProductWhileCreatingAnOrderTest">
        <annotations>
            <features value="Bundle"/>
            <stories value="Create  Admin checks if only one Quantity Configuration is displayed for Bundle product while creating an order"/>
            <title value="Admin checks if only one Quantity Configuration is displayed for Bundle product while creating an order"/>
            <description value="create Admin checks if only one Quantity Configuration is displayed for Bundle product "/>
            <severity value="MAJOR"/>
            <testCaseId value="AC-5237"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct1"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct2"/>
            <createData entity="Simple_US_Customer_NY" stepKey="createCustomer"/>
        </before>
        <after>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteSimpleProduct2"/>
            <!--Delete customer-->
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Go to bundle product creation page -->
        <amOnPage url="{{AdminProductCreatePage.url(BundleProduct.set, BundleProduct.type)}}" stepKey="goToBundleProductCreationPage"/>
        <waitForPageLoad stepKey="waitForBundleProductCreationPage"/>
        <!-- Entering Bundle Product name,SKU, category, url key -->
        <fillField selector="{{AdminProductFormSection.productName}}" userInput="{{BundleProduct.name}}" stepKey="fillProductName"/>
        <!-- Create bundle product options -->
        <conditionalClick selector="{{AdminProductFormBundleSection.bundleItemsToggle}}" dependentSelector="{{AdminProductFormBundleSection.bundleItemsToggle}}" visible="false" stepKey="conditionallyOpenSectionBundleItems"/>
        <click selector="{{AdminProductFormBundleSection.addOption}}" stepKey="clickAddOption3"/>
        <waitForElementVisible selector="{{AdminProductFormBundleSection.bundleOptionXTitle('0')}}" stepKey="waitForBundleOptions"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXTitle('0')}}" userInput="{{BundleProduct.optionTitle1}}" stepKey="fillOptionTitle"/>
        <selectOption selector="{{AdminProductFormBundleSection.bundleOptionXInputType('0')}}" userInput="{{BundleProduct.optionInputType1}}" stepKey="selectInputType"/>
        <waitForElementVisible selector="{{AdminProductFormBundleSection.addProductsToOption}}" stepKey="waitForAddProductsToBundle"/>
        <click selector="{{AdminProductFormBundleSection.addProductsToOption}}" stepKey="clickAddProductsToOption"/>
        <waitForPageLoad stepKey="waitForPageLoadAfterBundleProducts"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterBundleProductOptions">
            <argument name="product" value="$$simpleProduct1$$"/>
        </actionGroup>
        <checkOption selector="{{AdminAddProductsToOptionPanel.firstCheckbox}}" stepKey="selectFirstGridRow"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterBundleProductOptions2">
            <argument name="product" value="$$simpleProduct2$$"/>
        </actionGroup>
        <checkOption selector="{{AdminAddProductsToOptionPanel.firstCheckbox}}" stepKey="selectFirstGridRow2"/>
        <click selector="{{AdminAddProductsToOptionPanel.addSelectedProducts}}" stepKey="clickAddSelectedBundleProducts"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '0')}}" userInput="{{BundleProduct.defaultQuantity}}" stepKey="fillProductDefaultQty1"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '1')}}" userInput="{{BundleProduct.defaultQuantity}}" stepKey="fillProductDefaultQty2"/>
        <!--Save the product-->
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="clickSaveButton"/>
        <!--Create new order-->
        <actionGroup ref="AdminNavigateToNewOrderPageExistingCustomerActionGroup" stepKey="navigateToNewOrderWithExistingCustomer">
            <argument name="customer" value="Simple_US_Customer_NY"/>
        </actionGroup>
        <click selector="{{AdminOrderFormItemsSection.addProducts}}" stepKey="clickAddProducts"/>
        <click selector="{{AdminOrderFormItemsSection.search}}" stepKey="clickSearch"/>
        <scrollTo selector="{{AdminOrderFormItemsSection.rowCheck('1')}}" x="0" y="-100" stepKey="scrollToCheckColumn"/>
        <checkOption selector="{{AdminOrderFormItemsSection.rowCheck('1')}}" stepKey="selectProduct"/>
        <waitForPageLoad stepKey="waitForProductLoad"/>
    </test>
</tests>
