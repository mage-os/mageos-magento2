<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright 2023 Adobe
 * All Rights Reserved.
 */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminAddDecimalDefaultToBundleItemsTest">
        <annotations>
            <features value="Bundle"/>
            <stories value="Create/Edit bundle product in Admin"/>
            <title value="Admin should be able to set decimal default to bundle item when item allows it"/>
            <description value="Admin should be able to set decimal default value to new bundle option"/>
            <severity value="AVERAGE"/>
            <testCaseId value="AC-8646"/>
            <useCaseId value="ACP2E-1799"/>
            <group value="Bundle"/>
        </annotations>
        <before>
            <createData entity="_defaultCategory" stepKey="createPreReqCategory"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct1"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct2"/>
            <actionGroup stepKey="loginToAdminPanel" ref="AdminLoginActionGroup"/>
        </before>
        <after>
            <deleteData createDataKey="createPreReqCategory" stepKey="deletePreReqCategory"/>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteSimpleProduct2"/>
            <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="navigateToProductIndex"/>
            <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="clearFilters"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!-- Open simpleProduct1 in Admin -->
        <actionGroup ref="SearchForProductOnBackendActionGroup" stepKey="filterSimpleProduct1">
            <argument name="product" value="SimpleProduct2"/>
        </actionGroup>
        <click selector="{{AdminProductGridSection.productGridNameProduct('$$simpleProduct1.name$$')}}" stepKey="clickOpenProductForEdit"/>
        <waitForPageLoad time="30" stepKey="waitForProductEditOpen"/>
        <!--  Open *Advanced Inventory* pop-up (Click on *Advanced Inventory* link). Set *Qty Uses Decimals* to *Yes*. Click on button *Done*  -->
        <actionGroup ref="AdminClickOnAdvancedInventoryLinkActionGroup" stepKey="clickOnAdvancedInventoryLink"/>
        <actionGroup ref="AdminSetQtyUsesDecimalsConfigActionGroup" stepKey="setQtyUsesDecimalsConfig">
            <argument name="value" value="Yes"/>
        </actionGroup>
        <actionGroup ref="AdminSubmitAdvancedInventoryFormActionGroup" stepKey="clickOnDoneButton"/>
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="clickOnSaveButton"/>

        <!-- Create new Bundle product -->
        <actionGroup ref="AdminOpenCreateBundleProductPageActionGroup" stepKey="goToBundleProductCreationPage"/>
        <actionGroup ref="AdminClickAddOptionOnBundleProductEditPageActionGroup" stepKey="clickAddOption1"/>
        <actionGroup ref="AdminFillBundleOptionTitleActionGroup" stepKey="fillOptionTitle">
            <argument name="optionTitle" value="{{BundleProduct.optionTitle1}}"/>
        </actionGroup>
        <actionGroup ref="AdminFillBundleOptionTypeActionGroup" stepKey="selectInputType"/>

        <actionGroup ref="AdminClickAddProductToOptionByOptionIndexActionGroup" stepKey="clickAddProductsToOption"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterBundleProductOptions">
            <argument name="product" value="$$simpleProduct1$$"/>
        </actionGroup>
        <actionGroup ref="AdminCheckFirstCheckboxInAddProductsToOptionPanelGridActionGroup" stepKey="selectFirstGridRow"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterBundleProductOptions2">
            <argument name="product" value="$$simpleProduct2$$"/>
        </actionGroup>
        <actionGroup ref="AdminCheckFirstCheckboxInAddProductsToOptionPanelGridActionGroup" stepKey="selectFirstGridRow2"/>
        <actionGroup ref="AdminClickAddSelectedProductsOnAddProductsToOptionPanelActionGroup" stepKey="clickAddSelectedBundleProducts"/>

        <grabValueFrom selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '0')}}" stepKey="grabbedFirstBundleOptionQuantity"/>
        <assertEquals stepKey="assertFirstBundleOptionDefaultQuantity">
            <expectedResult type="string">1</expectedResult>
            <actualResult type="string">$grabbedFirstBundleOptionQuantity</actualResult>
        </assertEquals>
        <grabValueFrom selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '1')}}" stepKey="grabbedSecondBundleOptionQuantity"/>
        <assertEquals stepKey="assertSecondBundleOptionDefaultQuantity">
            <expectedResult type="string">1</expectedResult>
            <actualResult type="string">$grabbedSecondBundleOptionQuantity</actualResult>
        </assertEquals>

        <!-- Fill first selection with decimal value -->
        <actionGroup ref="AdminFillBundleItemQtyActionGroup" stepKey="fillProduct1DefaultQty">
            <argument name="optionIndex" value="0"/>
            <argument name="productIndex" value="0"/>
            <argument name="qty" value="2.56"/>
        </actionGroup>

        <!-- Check there is no error message for the slection with allowed decimal value -->
        <dontSee selector="{{AdminProductFormBundleSection.fieldError('uid')}}" userInput="Please enter a valid number in this field." stepKey="doNotSeeErrorMessageForProduct1"/>

        <!-- Fill second selection with decimal value -->
        <actionGroup ref="AdminFillBundleItemQtyActionGroup" stepKey="fillProduct2DefaultQty">
            <argument name="optionIndex" value="0"/>
            <argument name="productIndex" value="1"/>
            <argument name="qty" value="2.56"/>
        </actionGroup>

        <!-- Check there is an error message for the slection with not allowed decimal value -->
        <see selector="{{AdminProductFormBundleSection.fieldError('uid')}}" userInput="Please enter a valid number in this field." stepKey="seeErrorMessageForProduct2"/>

    </test>
</tests>
