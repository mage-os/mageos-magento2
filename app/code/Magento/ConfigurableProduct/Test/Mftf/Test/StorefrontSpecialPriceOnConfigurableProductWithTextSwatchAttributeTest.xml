<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright 2025 Adobe
  * All Rights Reserved.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontSpecialPriceOnConfigurableProductWithTextSwatchAttributeTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="Special Price on configurable product"/>
            <title value="Special Price on Configurable Product with Swatch Attribute"/>
            <description value="Verify special price on configurable product created with text swatch attribute"/>
            <severity value="MAJOR"/>
            <testCaseId value="AC-4047"/>
            <group value="ConfigurableProduct"/>
        </annotations>
        <before>
            <!-- Precondition step1: create a category-->
            <createData entity="_defaultCategory" stepKey="category1"/>
            <!-- Precondition step2: create configurable product-->
            <createData entity="BaseConfigurableProduct" stepKey="createConfigurableProduct">
                <field key="name">Configurable product p1</field>
                <requiredEntity createDataKey="category1"/>
            </createData>
            <!-- Precondition step3: login to backend -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <!-- Delete created configurable product -->
            <deleteData createDataKey="category1" stepKey="deleteCategory"/>
            <actionGroup ref="DeleteAllProductsUsingProductGridActionGroup" stepKey="deleteCreatedProducts"/>
            <!-- Delete color attribute -->
            <actionGroup ref="DeleteProductAttributeActionGroup" stepKey="deleteColorAttribute">
                <argument name="ProductAttribute" value="ProductColorAttribute"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="adminLogout"/>
        </after>
        <!-- step1: Enable swatches -->
        <actionGroup ref="AddTextSwatchToProductActionGroup" stepKey="addColorAttribute">
            <argument name="attributeName" value="{{ProductColorAttribute.frontend_label}}"/>
            <argument name="attributeCode" value="{{ProductColorAttribute.attribute_code}}"/>
            <argument name="option1" value="Black"/>
            <argument name="option2" value="White"/>
            <argument name="option3" value="Blue"/>
        </actionGroup>
        <!-- Open configurable product and create configurations -->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openProduct">
            <argument name="productId" value="$createConfigurableProduct.id$"/>
        </actionGroup>
        <actionGroup ref="GenerateConfigurationsByAttributeCodeActionGroup" stepKey="createProductConfigurations">
            <argument name="attributeCode" value="{{ProductColorAttribute.attribute_code}}"/>
        </actionGroup>
        <actionGroup ref="ChangeConfigurableProductChildProductPriceActionGroup" stepKey="changePriceForBlack">
            <argument name="productAttributes" value="Color: Black"/>
            <argument name="productPrice" value="100"/>
        </actionGroup>
        <actionGroup ref="ChangeConfigurableProductChildProductPriceActionGroup" stepKey="changePriceForWhite">
            <argument name="productAttributes" value="Color: White"/>
            <argument name="productPrice" value="200"/>
        </actionGroup>
        <actionGroup ref="SaveConfigurableProductAddToCurrentAttributeSetActionGroup" stepKey="saveConfigurableProduct"/>
        <!-- step2: Add special price to simple configurable-Black product generated by configurable -->
        <actionGroup ref="FilterAndSelectProductActionGroup" stepKey="seeConfigurableProduct1BlackProductInGrid">
            <argument name="productSku" value="$createConfigurableProduct.sku$-Black"/>
        </actionGroup>
        <actionGroup ref="AddSpecialPriceToProductActionGroup" stepKey="addSpecialPriceToBlackProduct">
            <argument name="price" value="90"/>
        </actionGroup>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveBlackProductForm"/>
        <!-- step2: Add special price to simple configurable-White product generated by configurable -->
        <actionGroup ref="FilterAndSelectProductActionGroup" stepKey="seeConfigurableProduct1WhiteProductInGrid">
            <argument name="productSku" value="$createConfigurableProduct.sku$-White"/>
        </actionGroup>
        <actionGroup ref="AddSpecialPriceToProductActionGroup" stepKey="addSpecialPriceToWhiteProduct">
            <argument name="price" value="190"/>
        </actionGroup>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveWhiteProductForm"/>
        <!-- remove the Filter From the product page-->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="visitAdminProductPage"/>
        <actionGroup ref="ClearFiltersAdminProductGridActionGroup" stepKey="clearFilterFromProductIndex"/>
        <!-- step3: Go to category page -->
        <actionGroup ref="StorefrontGoToCategoryPageActionGroup" stepKey="openStorefrontCategoryPage">
            <argument name="categoryName" value="$category1.name$"/>
        </actionGroup>
        <!-- step4: Select configurable product (with special price) -->
        <actionGroup ref="StorefrontOpenProductEntityPageActionGroup" stepKey="selectConfigurableProductP1">
            <argument name="product" value="$createConfigurableProduct$"/>
        </actionGroup>
        <actionGroup ref="AssertStorefrontProductDetailPageFinalPriceActionGroup" stepKey="assertProductFinalPriceTextForP1">
            <argument name="finalProductPrice" value="90.00"/>
        </actionGroup>
        <!-- step5: Select configurable attribute assigned to that product (Eg:Size or color) -->
        <actionGroup ref="StorefrontSelectSwatchOptionOnProductPageActionGroup" stepKey="selectBlackOptionOnP1">
            <argument name="optionName" value="Black"/>
        </actionGroup>
        <!-- step6: Check how price changes -->
        <actionGroup ref="AssertStorefrontProductDetailPageFinalPriceActionGroup" stepKey="assertProductFinalPriceTextForBlackP1">
            <argument name="finalProductPrice" value="90.00"/>
        </actionGroup>
        <!-- step5: Select configurable attribute assigned to that product (Eg:Size or color) -->
        <actionGroup ref="StorefrontSelectSwatchOptionOnProductPageActionGroup" stepKey="selectWhiteOptionOnP1">
            <argument name="optionName" value="White"/>
        </actionGroup>
        <!-- step6: Check how price changes -->
        <actionGroup ref="AssertStorefrontProductDetailPageFinalPriceActionGroup" stepKey="assertProductFinalPriceTextForWhiteP1">
            <argument name="finalProductPrice" value="190.00"/>
        </actionGroup>
    </test>
</tests>
