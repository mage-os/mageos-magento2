<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright 2024 Adobe
  * All Rights Reserved.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminChangeFrontendLogoWithSingleStoreModeTest">
        <annotations>
            <features value="Content"/>
            <stories value="Frontend logo change"/>
            <title value="To check whether admin is able to change the frontend logo when single store mode is enabled in the configuration."/>
            <description value="This test validates that the admin can change the frontend logo under Single Store Mode, ensuring the original logo is saved and restored after the test."/>
            <severity value="MAJOR"/>
            <testCaseId value="AC-8825"/>
            <group value="Content"/>
        </annotations>
        <before>
            <!--Log in as Admin-->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <!-- Enable media gallery if not already enabled -->
            <actionGroup ref="CliMediaGalleryEnhancedEnableActionGroup" stepKey="enableOldMediaGallery">
                <argument name="enabled" value="0"/>
            </actionGroup>
        </before>
        <after>
            <!--Disable Single Store Mode-->
            <magentoCLI command="config:set general/single_store_mode/enabled 0" stepKey="disabledSingleStoreMode"/>
            <!-- Disable media gallery if previously enabled -->
            <actionGroup ref="CliMediaGalleryEnhancedEnableActionGroup" stepKey="disableOldMediaGallery">
                <argument name="enabled" value="1"/>
            </actionGroup>
            <!--Log out as Admin-->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin"/>
        </after>
        <amOnPage url="{{DesignConfigPage.url}}" stepKey="navigateToDesignConfigPage" />
        <waitForPageLoad stepKey="waitForDesignConfigPageLoad"/>
        <waitForElementClickable selector="{{AdminDesignConfigSection.scopeRow('3')}}" stepKey="waitForScopeRowClickable"/>
        <click selector="{{AdminDesignConfigSection.scopeRow('3')}}" stepKey="editStoreView"/>
        <waitForElementVisible selector="{{AdminDesignConfigSection.headerSection}}" stepKey="waitForAdminDesignConfigHeaderSectionVisible"/>
        <scrollTo selector="{{AdminDesignConfigSection.headerSection}}" stepKey="scrollToHtmlHeadSection"/>
        <click selector="{{AdminDesignConfigSection.headerSection}}" stepKey="openHtmlHeadSection"/>
        <!--Upload the First Image-->
        <click selector="{{AdminDesignConfigSection.selectFromGalleryByFieldsetName('Head')}}" stepKey="openMediaGallery"/>
        <actionGroup ref="VerifyMediaGalleryStorageActionsActionGroup" stepKey="verifyMediaGalleryStorageBtn"/>
        <!--Navigate to Storage Folder-->
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandStorageRootFolder">
            <argument name="FolderName" value="Storage Root"/>
        </actionGroup>
        <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToWysiwygFolder">
            <argument name="FolderName" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="CreateImageFolderActionGroup" stepKey="CreateImageFolder">
            <argument name="ImageFolder" value="ImageFolder"/>
        </actionGroup>
        <actionGroup ref="AttachImageActionGroup" stepKey="selectImageFromMediaStorage">
            <argument name="Image" value="ImageUpload3"/>
        </actionGroup>
        <actionGroup ref="SaveImageActionGroup" stepKey="insertImage"/>
        <click selector="{{AdminDesignConfigSection.saveConfiguration}}" stepKey="saveConfiguration"/>
        <waitForElementVisible selector="{{AdminDesignConfigSection.successNotification}}" stepKey="waitForSuccessNotification"/>
        <!--Clear Cache-->
        <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCacheAfterFirstImageUpload">
            <argument name="tags" value=""/>
        </actionGroup>
        <!--Navigate to Store front home page-->
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="goToHomePage"/>
        <waitForPageLoad stepKey="waitToLoadHomePage"/>
        <!--assert to check first uploaded image name-->
        <waitForElement selector="{{StorefrontHeaderSection.logoImage(ImageUpload3.fileName)}}" stepKey="waitForLogoImageVisible"/>
     <!-- Enable Single Store Mode -->
        <magentoCLI command="config:set general/single_store_mode/enabled 1" stepKey="enabledSingleStoreMode"/>
        <!--Clear Cache-->
        <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCacheAfterSingleStoreModeEnabled">
            <argument name="tags" value=""/>
        </actionGroup>
        <!--Edit Store View for Second Image-->
        <amOnPage url="{{DesignConfigPage.url}}" stepKey="navigateToDesignConfigPageForSecondImage"/>
        <waitForPageLoad stepKey="waitForConfigPageLoad"/>
        <click selector="{{AdminDesignConfigSection.scopeRow('1')}}" stepKey="editStoreViewForSecondImage"/>
        <waitForPageLoad stepKey="waitForPageLoadPostSelectingScopeRow"/>
        <scrollTo selector="{{AdminDesignConfigSection.headerSection}}" stepKey="scrollToHtmlHeadSectionForSecondImageUpload"/>
        <click selector="{{AdminDesignConfigSection.headerSection}}" stepKey="openHtmlHeadSectionForSecondImageUpload"/>
        <!-- Upload second Image-->
        <click selector="{{AdminDesignConfigSection.selectFromGalleryByFieldsetName('Head')}}" stepKey="openMediaGalleryForSecondImage"/>
        <actionGroup ref="VerifyMediaGalleryStorageActionsActionGroup" stepKey="verifyMediaGalleryStorageBtnForSecondImage"/>
        <!--Navigate to Created Folder to Store Second Image-->
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandStorageRootFolderForSecondImage">
            <argument name="FolderName" value="Storage Root"/>
        </actionGroup>
        <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="navigateToWysiwygFolderForSecondImage">
            <argument name="FolderName" value="wysiwyg"/>
        </actionGroup>
        <actionGroup ref="NavigateToMediaFolderActionGroup" stepKey="selectTheCreatedFolderForSecondImage">
            <argument name="FolderName" value="{{ImageFolder.name}}"/>
        </actionGroup>
        <actionGroup ref="AttachImageActionGroup" stepKey="selectSecondImageFromMediaStorage">
            <argument name="Image" value="ImageUpload"/>
        </actionGroup>
        <actionGroup ref="SaveImageActionGroup" stepKey="insertSecondImage"/>
        <click selector="{{AdminDesignConfigSection.saveConfiguration}}" stepKey="saveConfigurationForSecondImage"/>
        <waitForElementVisible selector="{{AdminDesignConfigSection.successNotification}}" stepKey="waitForSuccessNotificationForSecondImage"/>
        <!--Clear Cache-->
        <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCacheAfterSecondImageUpload">
            <argument name="tags" value=""/>
        </actionGroup>
        <!--Navigate to Store front home page-->
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="goToStoreFrontHomePage"/>
        <waitForPageLoad stepKey="waitToLoadStoreFrontHomePage"/>
        <!--assert to check second uploaded image name-->
        <waitForElement selector="{{StorefrontHeaderSection.logoImage(ImageUpload.fileName)}}" stepKey="waitForSecondLogoImageVisible"/>
        <!--Navigate to Store View to delete uploaded logo-->
        <amOnPage url="{{DesignConfigPage.url}}" stepKey="navigateToDesignConfigPageToDeleteUploadedLogo"/>
        <waitForElementClickable selector="{{AdminDesignConfigSection.scopeRow('1')}}" stepKey="waitForScopeRow1Clickable"/>
        <click selector="{{AdminDesignConfigSection.scopeRow('1')}}" stepKey="editStoreViewForScopeRow"/>
        <waitForPageLoad stepKey="waitForPageLoadAfterSelectingScopeRow"/>
        <scrollTo selector="{{AdminDesignConfigSection.headerSection}}" stepKey="scrollToHtmlHeadSectionToDeleteImage"/>
        <click selector="{{AdminDesignConfigSection.headerSection}}" stepKey="openHtmlHeadSectionToDeleteImage"/>
        <!--Delete uploaded Image From Header-->
        <click selector="{{AdminDesignConfigSection.deleteHeaderSectionImage}}" stepKey="clickUseDefault"/>
        <waitForElementVisible selector="{{AdminDesignConfigSection.saveConfiguration}}" stepKey="waitForSaveConfiguration"/>
        <click selector="{{AdminDesignConfigSection.saveConfiguration}}" stepKey="saveConfigSectionConfiguration"/>
        <waitForElementVisible selector="{{AdminDesignConfigSection.successNotification}}" stepKey="waitForConfigSectionSuccessNotification"/>
        <waitForPageLoad stepKey="waitForSuccessNotificationPageLoad"/>
        <!--Clear Cache-->
        <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCacheAfterDeleteImage">
            <argument name="tags" value=""/>
        </actionGroup>
        <!--Code Section To Delete ImageFolder-->
        <actionGroup ref="NavigateToMediaGalleryActionGroup" stepKey="navigateToMediaGallery"/>
        <!--Expand Media Gallery Folder-->
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandStorageRootFolder2">
            <argument name="FolderName" value="Storage Root"/>
        </actionGroup>
        <actionGroup ref="AdminExpandMediaGalleryFolderActionGroup" stepKey="expandWysiwygFolder">
            <argument name="FolderName" value="wysiwyg"/>
        </actionGroup>
        <!--Delete Folder From Media Gallery -->
        <actionGroup ref="DeleteFolderActionGroup" stepKey="DeleteFolderFromMediaGallery">
            <argument name="Image" value="{{ImageFolder.name}}"/>
        </actionGroup>
    </test>
</tests>
