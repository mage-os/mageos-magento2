<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
   * Copyright 2024 Adobe
  * All Rights Reserved.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCheckConfigPaymentsProInUnitedstatesTest">
        <annotations>
            <features value="PayPal"/>
            <stories value="Payment methods"/>
            <title value="Check config for payments pro in Unites States"/>
            <description value="Check paypal payments pro payment option's enablement and disablement based on the configuration setting For Payments Pro in backend"/>
            <severity value="MAJOR"/>
            <testCaseId value="AC-4790"/>
            <group value="3rd_party_integration" />
            <group value="pr_exclude" />
        </annotations>
        <before>
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>
            <createData entity="SimpleProduct" stepKey="simpleProduct"/>

            <magentoCLI command="config:set paypal/general/merchant_country US" stepKey="setMerchantCountry"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
            <magentoCLI command="config:set payment/paypal_payment_pro/active 0" stepKey="disablePayPalPaymentsPro"/>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteProduct"/>
        </after>
        <amOnPage url="{{AdminConfigPaymentMethodsPage.url}}" stepKey="navigateToPaymentConfigurationPage"/>
        <waitForPageLoad stepKey="waitForConfigPageLoad"/>
        <actionGroup ref="AdminAssertPaypalAllInOnePaymentMethodActionGroup" stepKey="AssertPayAllInOneLink"/>
        <!--Clear paypal details config related data-->
        <actionGroup ref="AdminClearPaymentsProActionGroup" stepKey="clearExistingDataForPaymentsPro"/>
        <actionGroup ref="AdminSaveConfigActionGroup" stepKey="saveConfig"/>
        <actionGroup ref="AdminAssertPaypalCreditPaymentsProActionGroup" stepKey="enablePaypalPaymentsPro"/>
        <!--Save Configuration-->
        <actionGroup ref="AdminSaveConfigActionGroup" stepKey="saveConfigs"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runIndexCronJobs">
            <argument name="indices" value=""/>
        </actionGroup>
        <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanCache">
            <argument name="tags" value="config full_page"/>
        </actionGroup>
        <waitForElementNotVisible selector="{{PayPalPaymentsProConfigSection.closeButton('us')}}" stepKey="assertConfigureBtnIsDisabled"/>
        <!--Login to storefront as guest customer-->
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="goToStoreFront"/>
        <waitForPageLoad stepKey="waitForProductPage"/>
        <!--Add simple product-->
        <actionGroup ref="AddSimpleProductToCartActionGroup" stepKey="addSimpleProductToCart">
            <argument name="product" value="$simpleProduct$"/>
        </actionGroup>
        <!--Open cart page and proceed to checkout-->
        <actionGroup ref="StorefrontCartPageOpenActionGroup" stepKey="goToCheckoutCartPage"/>
        <actionGroup ref="StorefrontClickProceedToCheckoutActionGroup" stepKey="clickProceedToCheckout"/>
        <!--Fill Shipping Address-->
        <actionGroup ref="GuestCheckoutFillNewShippingAddressActionGroup" stepKey="fillShippingAddress">
            <argument name="customer" value="$$createCustomer$$" />
            <argument name="address" value="US_Address_TX"/>
        </actionGroup>
        <!-- Select shipping -->
        <actionGroup ref="StorefrontSetShippingMethodActionGroup" stepKey="selectShippingMethodAsFlatRate">
            <argument name="shippingMethodName" value="Flat Rate"/>
        </actionGroup>
        <!-- Go to Order review -->
        <actionGroup ref="StorefrontCheckoutClickNextOnShippingStepActionGroup" stepKey="goToCheckoutPaymentPage"/>
        <waitForPageLoad stepKey="waitForLoadingPaypalPaymentPage"/>
        <!-- Assert Payflow Edition, Paypal Pro and Paypal Credit Payment method -->
        <waitForElementVisible selector="{{StorefrontCheckoutPaymentMethodSection.checkPaymentMethodByName('PayPal Express Checkout Payflow Edition')}}" stepKey="assertPayPalExpressCheckoutPayflowEdition"/>
        <waitForElementVisible selector="{{StorefrontCheckoutPaymentMethodSection.checkPaymentMethodByName('PayPal Credit')}}" stepKey="assertPaypalCreditPaymentMethod"/>
        <waitForElementVisible selector="{{StorefrontCheckoutPaymentMethodSection.checkPaymentMethodByName('Credit Card (Payflow Pro)')}}" stepKey="assertPaypalPaymentsProPaymentMethod"/>
        <magentoCLI command="config:set payment/paypal_payment_pro/active 0" stepKey="disablePaymentsPro"/>
        <magentoCLI command="config:set payment/payflow_express_bml/active 0" stepKey="disablePaypalCredit"/>
        <magentoCLI command="config:set payment/payflow_express/active 0" stepKey="disableExpressCheckout"/>
        <amOnPage url="{{AdminConfigPaymentMethodsPage.url}}" stepKey="navigateToPaymentConfigurationPageAfterDisablingPayPalExpressCheckout"/>
        <waitForPageLoad stepKey="waitForPaymentMethodPageToLoad"/>
        <waitForElementClickable selector="{{PayPalPaymentsProConfigSection.configureBtn('us')}}" stepKey="waitForClickPayPalConfigureBtnToAssertStatus"/>
        <click selector="{{PayPalPaymentsProConfigSection.configureBtn('us')}}" stepKey="clickPayPalConfigureBtnToAssertStatus"/>
        <!--  Disable PaymentsPro and Assert Green Checkmark -->
        <waitForElementNotVisible selector="{{PayPalPaymentsProConfigSection.disabledEnableSolution('us')}}" stepKey="assertNoGreenTickMarkForEnableThisSolutionDropdown"/>
        <assertElementContainsAttribute stepKey="seePaypalCreditIsDisabled">
            <expectedResult selector="{{PayPalPaymentsProConfigSection.enablePaypalCredit('us')}}" attribute="disabled" type="string"></expectedResult>
        </assertElementContainsAttribute>
        <seeOptionIsSelected selector="{{PayPalPaymentsProConfigSection.enablePaypalCredit('us')}}" userInput="No" stepKey="seePaypalCreditIsSetAsNo"/>
        <waitForElementNotVisible selector="{{PayPalPaymentsProConfigSection.disabledPaypalCredit('us')}}" stepKey="assertGreenTickMarkPresentForPaypalCreditDropdown"/>
        <waitForElementNotVisible selector="{{PayPalPaymentsProConfigSection.sortOrder('us')}}" stepKey="assertSortOrderFieldIsDisappeared"/>
        <seeOptionIsSelected selector="{{PayPalPaymentsProConfigSection.enableVault('us')}}" userInput="Yes" stepKey="seeValultIsSetAsNo"/>
        <waitForElementVisible selector="{{PayPalPaymentsProConfigSection.disabledVault('us')}}" stepKey="assertGreenTickMarkPresentForEnableVaultDropdown"/>
        <actionGroup ref="AdminSaveConfigActionGroup" stepKey="saveConfiguration"/>
        <waitForElementVisible selector="{{PayPalPaymentsProConfigSection.configureBtn('us')}}" stepKey="assertConfigureVisible"/>
        <!--  Assert No Other Paypal Payments Methods Available in Storefront -->
        <actionGroup ref="StorefrontNavigateToGuestCheckoutReviewAndPaymentsPageActionGroup" stepKey="goToStoreFrontCheckoutPageToAssertPaypalPaymentMethodIsDisappeared"/>
        <waitForElementNotVisible selector="{{StorefrontCheckoutPaymentMethodSection.checkPaymentMethodByName('PayPal Express Checkout Payflow Edition')}}" stepKey="assertPayPalPaymentIsAbsent"/>
        <waitForElementNotVisible selector="{{StorefrontCheckoutPaymentMethodSection.checkPaymentMethodByName('PayPal Credit')}}" stepKey="assertPaypalCreditPaymentMethodIsAbsent"/>
        <waitForElementNotVisible selector="{{StorefrontCheckoutPaymentMethodSection.checkPaymentMethodByName('Credit Card (Payflow Pro)')}}" stepKey="assertPaypalPaymentsProPaymentMethodIsAbsent"/>
        <!--Set Paypal Credit to No and assert the status-->
        <magentoCLI command="config:set payment/payflowpro/sandbox_flag 1" stepKey="enableSandboxMode"/>
        <magentoCLI command="config:set payment/paypal_payment_pro/active 1" stepKey="enablePaymentsProSolution"/>
        <magentoCLI command="config:set payment/payflow_express_bml/active 1" stepKey="enablePayPalPaymentMethod"/>
        <magentoCLI command="config:set payment/payflow_express/active 1" stepKey="enablePayflowEdition"/>
        <magentoCLI command="config:set payment/payflow_express_bml/active 0" stepKey="disablePayPalCreditPaymentMethod"/>
        <amOnPage url="{{AdminConfigPaymentMethodsPage.url}}" stepKey="navigateToPaymentConfigurationPageAfterEnablingPaypal"/>
        <waitForPageLoad stepKey="waitForPaymentMethodPageToLoadAfterEnabling"/>
        <waitForElementNotVisible selector="{{PayPalPaymentsProConfigSection.closeButton('us')}}" stepKey="assertConfigeBtnNotVisible"/>
        <waitForElementClickable selector="{{PayPalPaymentsProConfigSection.configureBtn('us')}}" stepKey="waitForClickPayPalConfigureBtnToAssertStatusAfterEnabling"/>
        <click selector="{{PayPalPaymentsProConfigSection.configureBtn('us')}}" stepKey="clickPayPalConfigureBtnToAssertStatusAfterEnabling"/>
        <waitForElementVisible selector="{{PayPalPaymentsProConfigSection.disabledEnableSolution('us')}}" stepKey="assertGreenTickMarkForEnableThisSolutionDropdown"/>
        <seeOptionIsSelected selector="{{PayPalPaymentsProConfigSection.enablePaypalCredit('us')}}" userInput="No" stepKey="seeEnablePaypalCreditIsSetAsNo"/>
        <waitForElementNotVisible selector="{{PayPalPaymentsProConfigSection.disabledPaypalCredit('us')}}" stepKey="assertGreenTickMarkAbsentForPaypalCreditDropdown"/>
        <waitForElementVisible selector="{{PayPalPaymentsProConfigSection.disabledVault('us')}}" stepKey="assertGreenTickMarkForEnableVaultDropdown"/>
        <waitForElementVisible selector="{{PayPalPaymentsProConfigSection.closeButton('us')}}" stepKey="assertConfigBtnIsDisabled"/>
        <!--Go to checkout page and assert paypal express checkout Payflow Edition and Credit Card option is present-->
        <actionGroup ref="StorefrontNavigateToGuestCheckoutReviewAndPaymentsPageActionGroup" stepKey= "goToStoreFrontCheckoutPageToAssertPaypalPaymentMethodIsPresent"/>
        <waitForElementVisible selector="{{StorefrontCheckoutPaymentMethodSection.checkPaymentMethodByName('PayPal Express Checkout Payflow Edition')}}" stepKey="assertPayPalExpressPayflowEdition"/>
        <waitForElementVisible selector="{{StorefrontCheckoutPaymentMethodSection.checkPaymentMethodByName('Credit Card (Payflow Pro)')}}" stepKey="creditcardPaymentsPro"/>
    </test>
</tests>
